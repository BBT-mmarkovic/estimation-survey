@page "/Uebung1"
@using Microsoft.AspNetCore.Components
@using QuickSurvey.Controllers
@using QuickSurvey.Data
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using QuickSurvey.Data.Uebung1
@inject ProtectedLocalStorage ProtectedLocalStore

@* from: https://medium.com/it-dead-inside/lets-learn-blazor-working-with-url-parameters-and-query-strings-37e1f8aacec7 *@
@inject NavigationManager NavigationManager

@code {
    private string myIconValue = "jdenticon";
    private string myUserName = "-";

    private bool showResultsImmediately = false;
}

<span style="font-size: small"><a href="/">&lt;- zurück</a></span>

<h3>Übung 1</h3>
<p>
    Schätze die Luftentfernung zu den folgenden Hauptstädten auf 50km genau. Ausgangslage ist Luzern.
</p>
<p>
    <img src="img/europe-cities.jpg" alt="Europe Cities" style="max-width: 60%" /><br />
    <span style="font-size: x-small">image source: <a href="https://www.freeworldmaps.net/europe/cities.html">freeworldmaps.net</a></span>
</p>
<p>
    Für die Auswertung wurde dir die folgende Kennung zugewiesen: <span class="idStyle">@myUserName</span>
</p>
@if (!ResponseStore.EstimateUebung1Submitted(myUserName) && !showResultsImmediately)
{
    <div class="cw-880">
        <EditForm Model="@uebung1Estimates"
                  OnValidSubmit="@HandleValidSubmit"
                  OnInvalidSubmit="@HandleInvalidSubmit"
                  Context="EditFormContext"
                  class="w-800">
            <DxFormLayout>
                <DataAnnotationsValidator />
                <DxFormLayoutItem Caption="Berlin, Deutschland:">
                    <DxSpinEdit MinValue="0" MaxValue="10000" Increment="50"
                                @bind-Value="@uebung1Estimates.ToBerlin" ShowValidationIcon="true" />
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Stockholm, Schweden:">
                    <DxSpinEdit MinValue="0" MaxValue="10000" Increment="50"
                                @bind-Value="@uebung1Estimates.ToStockholm" ShowValidationIcon="true" />
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Madrid, Spanien:">
                    <DxSpinEdit MinValue="0" MaxValue="10000" Increment="50"
                                @bind-Value="@uebung1Estimates.ToMadrid" ShowValidationIcon="true" />
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Rom, Italien:">
                    <DxSpinEdit MinValue="0" MaxValue="10000" Increment="50"
                                @bind-Value="@uebung1Estimates.ToRom" ShowValidationIcon="true" />
                </DxFormLayoutItem>
                <DxFormLayoutItem ColSpanMd="12">
                    <DxButton SubmitFormOnClick="true"
                              Text="Schätzung abgeben"
                              RenderStyle="ButtonRenderStyle.Secondary" />
                </DxFormLayoutItem>
                <DxFormLayoutItem ColSpanMd="12">
                    <ValidationSummary />
                </DxFormLayoutItem>
            </DxFormLayout>
        </EditForm>
    </div>
    <div class="row w-100 mx-0">
        <p class="col-12 mt-2">
            <span style="font-style: italic">@FormValidationState</span>
        </p>
    </div>
}
else
{
    var allEstimates = ResponseStore.GetAllUebung1();
    var myEstimate = ResponseStore.GetEstimateUebung1(this.myUserName);
    <div class="row w-100 mx-0">
        <p class="col-12 mt-2" style="background-color: lightyellow">
            Deine Antwort =
            Berlin: @myEstimate.ToBerlin km;
            Stockholm: @myEstimate.ToStockholm km;
            Madrid: @myEstimate.ToMadrid km;
            Rom: @myEstimate.ToRom km
        </p>
    </div>
    <DxGridLayout CssClass="w-100 ch-480">
        <Rows>
            <DxGridLayoutRow />
            <DxGridLayoutRow />
            <DxGridLayoutRow />
            <DxGridLayoutRow />
        </Rows>
        <Columns>
            <DxGridLayoutColumn Width="40%" />
            <DxGridLayoutColumn Width="60%" />
        </Columns>
        <Items>
            <!--
                BERLIN
            -->
            <DxGridLayoutItem Row="0" Column="0">
                <Template>
                    <div class="row w-100 mx-0">
                        <p class="col-12 mt-2" style="background-color: lightblue">
                            Luftdistanz Luzern - Berlin: <b>700</b> km;
                        </p>
                    </div>
                    <DxGrid Data="@allEstimates" CustomizeElement="Grid_CustomizeElement">
                        <Columns>
                            <DxGridDataColumn FieldName="UserId" Caption="Benutzer"/>
                            <DxGridDataColumn FieldName="ToBerlin" Caption="Dist. Berlin geschätzt [km]"/>
                            <DxGridDataColumn FieldName="DiffToBerlin" Caption="∆ Berlin [km]"/>
                        </Columns>
                        <TotalSummary>
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="ToBerlin" ValueDisplayFormat="0" />
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="DiffToBerlin" ValueDisplayFormat="0" />
                        </TotalSummary>
                    </DxGrid>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="0" Column="1">
                <Template>
                    <DxChart Data="@uebung1BerlinDistribution"
                             T="DistributionItem">
                        <DxChartTitle Text="Auswertung Berlin" />
                        <DxChartBarSeries ArgumentField="@((DistributionItem i) => i.Gruppe)"
                                          ValueField="@((DistributionItem i) => i.AnzahlSchaetzungen)">
                        </DxChartBarSeries>
                        <DxChartLegend Visible="false" />
                    </DxChart>
                </Template>
            </DxGridLayoutItem>
            
            <!--
                STOCKHOLM
            -->
            <DxGridLayoutItem Row="1" Column="0">
                <Template>
                    <div class="row w-100 mx-0">
                        <p class="col-12 mt-2" style="background-color: lightblue">
                            Luftdistanz Luzern - Stockholm: <b>1'200</b> km
                        </p>
                    </div>
                    <DxGrid Data="@allEstimates" CustomizeElement="Grid_CustomizeElement">
                        <Columns>
                            <DxGridDataColumn FieldName="UserId" Caption="Benutzer"/>
                            <DxGridDataColumn FieldName="ToStockholm" Caption="Dist. Stockholm geschtäzt [km]"/>
                            <DxGridDataColumn FieldName="DiffToStockholm" Caption="∆ Stockholm [km]"/>
                        </Columns>
                        <TotalSummary>
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="ToStockholm" ValueDisplayFormat="0" />
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="DiffToStockholm" ValueDisplayFormat="0" />
                        </TotalSummary>
                    </DxGrid>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="1" Column="1">
                <Template>
                    <DxChart Data="@uebung1StockholmDistribution"
                             T="DistributionItem">
                        <DxChartTitle Text="Auswertung Stockholm" />
                        <DxChartBarSeries ArgumentField="@((DistributionItem i) => i.Gruppe)"
                                          ValueField="@((DistributionItem i) => i.AnzahlSchaetzungen)">
                        </DxChartBarSeries>
                        <DxChartLegend Visible="false" />
                    </DxChart>
                </Template>
            </DxGridLayoutItem>
            
            <!--
                MADRID
            -->
            <DxGridLayoutItem Row="2" Column="0">
                <Template>
                    <div class="row w-100 mx-0">
                        <p class="col-12 mt-2" style="background-color: lightblue">
                            Luftdistanz Luzern - Madrid: <b>1'500</b> km
                        </p>
                    </div>
                    <DxGrid Data="@allEstimates" CustomizeElement="Grid_CustomizeElement">
                        <Columns>
                            <DxGridDataColumn FieldName="UserId" Caption="Benutzer" />
                            <DxGridDataColumn FieldName="ToMadrid" Caption="Dist. Madrid geschätzt [km]" />
                            <DxGridDataColumn FieldName="DiffToMadrid" Caption="∆ Madrid [km]" />
                        </Columns>
                        <TotalSummary>
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="ToMadrid" ValueDisplayFormat="0" />
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="DiffToMadrid" ValueDisplayFormat="0" />
                        </TotalSummary>
                    </DxGrid>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="2" Column="1">
                <Template>
                    <DxChart Data="@uebung1MadridDistribution"
                             T="DistributionItem">
                        <DxChartTitle Text="Auswertung Madrid" />
                        <DxChartBarSeries ArgumentField="@((DistributionItem i) => i.Gruppe)"
                                          ValueField="@((DistributionItem i) => i.AnzahlSchaetzungen)">
                        </DxChartBarSeries>
                        <DxChartLegend Visible="false" />
                    </DxChart>
                </Template>
            </DxGridLayoutItem>
            
            <!--
                ROM
            -->
            <DxGridLayoutItem Row="3" Column="0">
                <Template>
                    <div class="row w-100 mx-0">
                        <p class="col-12 mt-2" style="background-color: lightblue">
                            Luftdistanz Luzern - Rom: <b>650</b> km
                        </p>
                    </div>
                    <DxGrid Data="@allEstimates" CustomizeElement="Grid_CustomizeElement">
                        <Columns>
                            <DxGridDataColumn FieldName="UserId" Caption="Benutzer" />
                            <DxGridDataColumn FieldName="ToRom" Caption="Dist. Rom geschätzt [km]" />
                            <DxGridDataColumn FieldName="DiffToRom" Caption="∆ Rom [km]"  />
                        </Columns>
                        <TotalSummary>
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="ToRom" ValueDisplayFormat="0" />
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="DiffToRom" ValueDisplayFormat="0" />
                        </TotalSummary>
                    </DxGrid>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="3" Column="1">
                <Template>
                    <DxChart Data="@uebung1RomDistribution"
                             T="DistributionItem">
                        <DxChartTitle Text="Auswertung Rom" />
                        <DxChartBarSeries ArgumentField="@((DistributionItem i) => i.Gruppe)"
                                          ValueField="@((DistributionItem i) => i.AnzahlSchaetzungen)">
                        </DxChartBarSeries>
                        <DxChartLegend Visible="false" />
                    </DxChart>
                </Template>
            </DxGridLayoutItem>

        </Items>
    </DxGridLayout>
}

@code {

    protected override void OnInitialized()
    {
        this.showResultsImmediately = this.NavigationManager.Uri.Contains("showResults", StringComparison.OrdinalIgnoreCase);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var storedUserName = await ProtectedLocalStore.GetAsync<string>("myUserName");
            if (storedUserName.Success && storedUserName.Value != null)
            {
                myUserName = storedUserName.Value;
            }
            else
            {
                myUserName = RandomNameGenerator.NextRandomName();
                await ProtectedLocalStore.SetAsync("myUserName", myUserName);
            }

            StateHasChanged();
        }
    }

    private string FormValidationState = @"";

    private Uebung1Estimates uebung1Estimates = new();

    private IEnumerable<DistributionItem> uebung1BerlinDistribution =
        DistributionCalculator.GenerateNormalDistributionForUebung1Berlin();
    private IEnumerable<DistributionItem> uebung1StockholmDistribution =
        DistributionCalculator.GenerateNormalDistributionForUebung1Stockholm();
    private IEnumerable<DistributionItem> uebung1MadridDistribution =
        DistributionCalculator.GenerateNormalDistributionForUebung1Madrid();
    private IEnumerable<DistributionItem> uebung1RomDistribution =
        DistributionCalculator.GenerateNormalDistributionForUebung1Rom();

    void Grid_CustomizeElement(GridCustomizeElementEventArgs e) {
        if (e.ElementType == GridElementType.DataCell)
        {
            var model = (Uebung1EstimatesByUser)e.Grid.GetDataItem(e.VisibleIndex);
            var fieldName = ((IGridDataColumn)e.Column).FieldName;
            if (fieldName == "DiffToBerlin")
            {
                e.Style = model.DiffToBerlin == 0 ? "background-color: lightgreen" : "";
            }
            else if (fieldName == "DiffToMadrid")
            {
                e.Style = model.DiffToMadrid == 0 ? "background-color: lightgreen" : "";
            }
            else if (fieldName == "DiffToRom")
            {
                e.Style = model.DiffToRom == 0 ? "background-color: lightgreen" : "";
            }
            else if (fieldName == "DiffToStockholm")
            {
                e.Style = model.DiffToStockholm == 0 ? "background-color: lightgreen" : "";
            }
        }
        else if (e.ElementType == GridElementType.DataRow)
        {
            var model = (Uebung1EstimatesByUser)e.Grid.GetDataItem(e.VisibleIndex);
            if (model.UserId == this.myUserName)
            {
                e.Style = "background-color: yellow";
            }
        }
    }

    void HandleValidSubmit()
    {
        FormValidationState = @"";
        ResponseStore.SetEstimate(this.myUserName, this.uebung1Estimates);
        uebung1BerlinDistribution = DistributionCalculator.GenerateNormalDistributionForUebung1Berlin();
        uebung1MadridDistribution = DistributionCalculator.GenerateNormalDistributionForUebung1Madrid();
        uebung1RomDistribution = DistributionCalculator.GenerateNormalDistributionForUebung1Rom();
        uebung1StockholmDistribution = DistributionCalculator.GenerateNormalDistributionForUebung1Stockholm();
    }

    void HandleInvalidSubmit()
    {
        FormValidationState = @"Eingabe ungültig";
    }
}
